<!DOCTYPE html>
<!-- saved from url=(0032)https://htmledit.squarefree.com/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory Order &amp; Profit Calculator</title>
    <style>
        /* Resetting some default margins and paddings */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f9;
            color: #333;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
            animation: fadeIn 1s ease;
        }

        h2 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #4A90E2;
            text-align: center;
        }

        label {
            display: block;
            font-size: 14px;
            margin-bottom: 6px;
            color: #555;
        }

        .required-label::after {
            content: " *";
            color: red;
        }

        input[type="number"],
        button {
            width: 100%;
            padding: 12px 15px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }

        input[type="checkbox"] {
            margin-right: 10px;
            transform: scale(1.2);
            cursor: pointer;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }

        button {
            background-color: #4A90E2;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #357ABD;
        }

        .result, .reorder-time, .profit-estimation, .order-by-time {
            margin-top: 20px;
            padding: 15px;
            border-radius: 5px;
            background-color: #E9F7EF;
            border: 1px solid #A9DFBF;
            font-size: 18px;
            text-align: center;
            color: #2C3E50;
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards;
        }

        .reorder-time, .profit-estimation, .order-by-time {
            font-size: 16px;
            color: #555;
        }

        /* Animation for result display */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Responsive design */
        @media (max-width: 480px) {
            h2 {
                font-size: 20px;
            }

            input[type="number"],
            button {
                font-size: 14px;
            }

            .result, .reorder-time, .profit-estimation, .order-by-time {
                font-size: 16px;
            }

            .reorder-time, .profit-estimation, .order-by-time {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>

<div class="container">
    <h2>Inventory Order &amp; Profit Calculator</h2>

    <label for="daysToSell" class="required-label">Days to Sell:</label>
    <input type="number" id="daysToSell" placeholder="Enter number of days">

    <label for="currentInventory" class="required-label">Current Inventory:</label>
    <input type="number" id="currentInventory" placeholder="Enter current inventory">

    <label for="dailySales" class="required-label">Average Daily Sales:</label>
    <input type="number" id="dailySales" placeholder="Enter daily sales">

    <label for="sellingPrice">Selling Price per Unit (₩):</label>
    <input type="number" id="sellingPrice" placeholder="Enter selling price">

    <label for="costPerUnit">Cost per Unit (₩):</label>
    <input type="number" id="costPerUnit" placeholder="Enter cost per unit">

    <label for="adCost">Ad Cost per Sale (₩):</label>
    <input type="number" id="adCost" placeholder="Enter ad cost per sale">

    <label for="bufferPercentage">Buffer Percentage:</label>
    <input type="number" id="bufferPercentage" placeholder="Enter buffer percentage" value="10">

    <div class="checkbox-container">
        <input type="checkbox" id="increaseAdBudget">
        <label for="increaseAdBudget">Increase ad budget by 30% every 3 days</label>
    </div>

    <div id="result" class="result">You should order: <strong>50</strong> units.</div>
    <div id="reorderTime" class="reorder-time">Estimated reorder date: <strong>Sat Aug 31 2024</strong></div>
    <div id="orderByTime" class="order-by-time">You should order by: <strong>Sun Aug 25 2024</strong></div>
    <div id="profitEstimation" class="profit-estimation">Estimated Profit: <strong>₩7,975,000</strong></div>
</div>

<script>
    // Function to format numbers as Korean Won with thousands separator
    function formatKoreanWon(amount) {
        return amount.toLocaleString('ko-KR', { style: 'currency', currency: 'KRW' });
    }

    // Function to calculate the order quantity, estimated profit, and recommended order date
    function calculateOrderQuantity() {
        // Get input values
        const daysToSell = parseInt(document.getElementById('daysToSell').value) || 0;
        const currentInventory = parseInt(document.getElementById('currentInventory').value) || 0;
        let dailySales = parseInt(document.getElementById('dailySales').value) || 0;
        const bufferPercentage = parseInt(document.getElementById('bufferPercentage').value) || 0;
        const increaseAdBudget = document.getElementById('increaseAdBudget').checked;
        const sellingPrice = parseFloat(document.getElementById('sellingPrice').value) || 0;
        const costPerUnit = parseFloat(document.getElementById('costPerUnit').value) || 0;
        const adCost = parseFloat(document.getElementById('adCost').value) || 0;

        let totalUnitsNeeded = 0;
        let adjustedDailySales = dailySales;  // Start with the original daily sales

        // Calculate total units needed with or without increasing ad budget
        for (let i = 0; i < daysToSell; i++) {
            if (increaseAdBudget && i > 0 && i % 3 === 0) {
                adjustedDailySales *= 1.3;  // Increase sales by 30% every 3 days
            }
            totalUnitsNeeded += adjustedDailySales;
        }

        // Calculate buffer stock
        const bufferUnits = (bufferPercentage / 100) * totalUnitsNeeded;

        // Total units needed including buffer
        totalUnitsNeeded += bufferUnits;

        // Calculate order quantity
        let orderQuantity = Math.round(totalUnitsNeeded - currentInventory);

        // Ensure the order quantity is not negative
        if (orderQuantity < 0) {
            orderQuantity = 0;
        }

        // Display the result
        document.getElementById('result').innerHTML = `You should order: <strong>${orderQuantity}</strong> units.`;

        // Calculate estimated time to reorder
        let estimatedDailySales = dailySales;
        let daysToDeplete = 0;
        if (increaseAdBudget) {
            let remainingInventory = currentInventory;

            while (remainingInventory > 0) {
                daysToDeplete++;
                if (daysToDeplete % 3 === 0) {
                    estimatedDailySales *= 1.3;
                }
                remainingInventory -= estimatedDailySales;
            }
        } else {
            daysToDeplete = Math.floor(currentInventory / dailySales);
        }

        let reorderDate = new Date();
        reorderDate.setDate(reorderDate.getDate() + daysToDeplete);
        document.getElementById('reorderTime').innerHTML = `Estimated reorder date: <strong>${reorderDate.toDateString()}</strong>`;

        // Calculate recommended order date to avoid stockout
        let orderByDate = new Date();
        orderByDate.setDate(reorderDate.getDate() - 6); // Subtract 6 days for shipping

        const currentDate = new Date();
        if (orderByDate < currentDate) {
            document.getElementById('orderByTime').innerHTML = `<strong style="color: red;">Order immediately!</strong>`;
        } else {
            document.getElementById('orderByTime').innerHTML = `You should order by: <strong>${orderByDate.toDateString()}</strong>`;
        }

        // Calculate estimated profit
        const totalAdCost = adCost * totalUnitsNeeded;
        const totalRevenue = sellingPrice * totalUnitsNeeded;
        const totalCost = (costPerUnit * totalUnitsNeeded) + totalAdCost;
        const estimatedProfit = totalRevenue - totalCost;

        document.getElementById('profitEstimation').innerHTML = `Estimated Profit: <strong>${formatKoreanWon(estimatedProfit)}</strong>`;
    }

    // Attach event listeners to input fields and checkbox for real-time calculation
    document.getElementById('daysToSell').addEventListener('input', calculateOrderQuantity);
    document.getElementById('currentInventory').addEventListener('input', calculateOrderQuantity);
    document.getElementById('dailySales').addEventListener('input', calculateOrderQuantity);
    document.getElementById('sellingPrice').addEventListener('input', calculateOrderQuantity);
    document.getElementById('costPerUnit').addEventListener('input', calculateOrderQuantity);
    document.getElementById('adCost').addEventListener('input', calculateOrderQuantity);
    document.getElementById('bufferPercentage').addEventListener('input', calculateOrderQuantity);
    document.getElementById('increaseAdBudget').addEventListener('change', calculateOrderQuantity);

    // Initial calculation in case there are pre-filled values
    calculateOrderQuantity();
</script>



</body></html>
